@import url('https://fonts.googleapis.com/css2?family=Share+Tech+Mono&display=swap');

/* Matrix-style animated background */
body {
	height: 100vh;
	background-color: #000;
	margin: 0;
	padding: 0;
}

h1 {
	color: green;
	font-family: 'Share Tech Mono', 'Cascadia Code', Menlo, Monaco, 'Courier New', monospace;
	font-size: 2.5rem;
	filter: drop-shadow(0px 0px 5px currentColor);
	position: fixed;
	top: 20px;
	left: 50%;
	transform: translateX(-50%);
	z-index: 100;
	margin: 0;
	text-align: center;
}

h1::after {
	content: '';
	display: inline-block;
	width: .2em;
	height: .7em;
	background-color: currentColor;
	margin-left: .1em;
	animation: blink 1s linear infinite forwards;
	vertical-align: baseline;
}

.grid-container {
	--grid: 10rem;
	width: 100%;
	height: 100%;
	position: absolute;
	top: 0;
	left: 0;
	transform-style: preserve-3d;
	perspective: 100rem;
	animation: rotate 100s linear infinite forwards;
	z-index: 1;
}

.grid-container .plane {
	--dir: 1;
	width: 300%;
	height: 150%;
	min-height: 70rem;
	position: absolute;
	bottom: 0;
	transform-style: preserve-3d;
	transform-origin: bottom center;
	transform: translateX(-50%) rotateX(85deg);
}

.grid-container .plane:last-child {
	--dir: -1;
	top: 0;
	transform-origin: top center;
	transform: translateX(-50%) rotateX(-85deg);
}

.grid-container .plane:last-child > *::after {
	background-image: linear-gradient(to top, rgba(0, 0, 0, 255) var(--grid), rgba(0, 0, 0, 0));
}

.grid-container .plane > * {
	transform-style: preserve-3d;
	height: 100%;
	width: 100%;
	position: absolute;
}

.grid-container .plane > *::before,
.grid-container .plane > *::after {
	content: '';
	display: block;
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
}

.grid-container .plane > *::before {
	background-image: repeating-linear-gradient(to left, green, green 4px, transparent 4px, transparent var(--grid)), 
		repeating-linear-gradient(to bottom, green, green 4px, transparent 4px, transparent var(--grid));
	animation: move 1s linear infinite forwards;
}

.grid-container .plane > *::after {
	background-image: linear-gradient(to bottom, rgba(0, 0, 0, 255) var(--grid), rgba(0, 0, 0, 0));
	z-index: 1;
	transform: translateZ(1px);
}

.grid-container .plane .glow {
	filter: blur(1rem);
	z-index: 1;
	mix-blend-mode: plus-lighter;
}

@keyframes move {
	from {
		transform: translateY(0px);
	}
	
	to {
		transform: translateY(calc(var(--grid) * var(--dir)));
	}
}

@keyframes rotate {
	from {
		transform: rotateY(0deg);
	}
	
	to {
		transform: rotateY(360deg);
	}
}

@keyframes blink {
	0% {
		visibility: visible;
	}
	
	50% {
		visibility: visible;
	}
	
	51% {
		visibility: hidden;
	}
	
	100% {
		visibility: hidden;
	}
}

/* Existing styles for face animation */
:root {
  /* Face sizing controls */
  --head-size: 300px;
  --mouth-size: 295px;
  
  /* Positioning controls */
  --mouth-vertical-offset: 82px;
  
  /* Responsive scaling factors */
  --tablet-scale: 0.83; /* 250px/300px for head */
  --mobile-scale: 0.67;  /* 200px/300px for head */
}

.App {
  min-height: 100vh;
  padding: 20px;
  box-sizing: border-box;
  position: relative;
  z-index: 10;
  background: transparent;
}

.faces-container {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  gap: 200px;
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
  padding-top: 100px;
  position: relative;
  z-index: 1001;
}

.face-column {
  position: relative;
  width: var(--head-size);
  height: 400px;
}

.face-pair {
  position: relative;
  width: 100%;
  height: 100%;
  transform-origin: center center;
}

/* Individual face pair controls for scaling */
.face-pair-1 {
  /* Add transform: scale() here to resize head-1 and mouth-1 together */
}

.face-pair-2 {
  /* Add transform: scale() here to resize head-2 and mouth-2 together */
}

.head-image, .mouth-image {
  position: absolute;
  max-width: 100%;
  height: auto;
}

.head-image {
  max-width: var(--head-size);
  top: 80px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 1;
}

.mouth-image {
  max-width: var(--mouth-size);
  top: var(--mouth-vertical-offset);
  left: 50%;
  transform: translateX(-50%);
  z-index: 2;
}

/* Move first mouth (mouth-1) to the left by 1px */
.face-column:nth-child(1) .mouth-image {
  left: calc(50% - 1px);
}

/* Move second mouth (mouth-2) to the right by 3px */
.face-column:nth-child(2) .mouth-image {
  left: calc(50% + 2px);
}

/* Responsive design */
@media (max-width: 768px) {
  .faces-container {
    flex-direction: column;
    align-items: center;
    gap: 100px;
    padding-top: 50px;
  }
  
  .face-column {
    width: calc(var(--head-size) * var(--tablet-scale));
    height: 350px;
  }
  
  .face-pair {
    width: 100%;
    height: 100%;
  }
  
  .head-image {
    max-width: calc(var(--head-size) * var(--tablet-scale));
    top: 60px;
  }
  
  .mouth-image {
    max-width: calc(var(--mouth-size) * var(--tablet-scale));
    top: calc(var(--mouth-vertical-offset) * var(--tablet-scale));
  }
}

@media (max-width: 480px) {
  .App {
    padding: 10px;
  }
  
  .faces-container {
    padding: 10px;
    gap: 80px;
    padding-top: 30px;
  }
  
  .face-column {
    width: calc(var(--head-size) * var(--mobile-scale));
    height: 300px;
  }
  
  .face-pair {
    width: 100%;
    height: 100%;
  }
  
  .head-image {
    max-width: calc(var(--head-size) * var(--mobile-scale));
    top: 50px;
  }
  
  .mouth-image {
    max-width: calc(var(--mouth-size) * var(--mobile-scale));
    top: calc(var(--mouth-vertical-offset) * var(--mobile-scale));
  }
}
